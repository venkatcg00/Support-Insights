-- CREATE DATABASE IF NOT EXISTS
CREATE DATABASE IF NOT EXISTS AIRFLOW;
CREATE DATABASE IF NOT EXISTS CSD_DATABASE;

GRANT ALL PRIVILEGES ON AIRFLOW.* TO 'project_user'@'%';
GRANT ALL PRIVILEGES ON CSD_DATABASE.* TO 'project_user'@'%';
FLUSH PRIVILEGES;

-- USE THE DATABASE
USE CSD_DATABASE;

-- TABLE 1: CSD_SOURCES
CREATE TABLE IF NOT EXISTS CSD_SOURCES (
    SOURCE_ID              INT             NOT NULL        PRIMARY KEY AUTO_INCREMENT,
    SOURCE_NAME            VARCHAR(255)    NOT NULL        UNIQUE,
    SOURCE_FILE_TYPE       VARCHAR(255)    NOT NULL,
    DATALOAD_STRATEGY      VARCHAR(255)    NOT NULL,
    LAST_LOADED_RECORD_ID  INT,
    DESCRIPTION            TEXT,
    ACTIVE_FLAG            TINYINT(1)      NOT NULL,
    START_DATE             DATETIME        NOT NULL,
    END_DATE               DATETIME        NOT NULL
);

-- TABLE 2: CSD_SUPPORT_AREAS
CREATE TABLE IF NOT EXISTS CSD_SUPPORT_AREAS (
    SUPPORT_AREA_ID        INT             NOT NULL        PRIMARY KEY AUTO_INCREMENT,
    SUPPORT_AREA_NAME      VARCHAR(255)    NOT NULL,
    SOURCE_ID              INT             NOT NULL,
    DESCRIPTION            TEXT,
    ACTIVE_FLAG            TINYINT(1)      NOT NULL,
    START_DATE             DATETIME        NOT NULL,
    END_DATE               DATETIME        NOT NULL,
    FOREIGN KEY            (SOURCE_ID) REFERENCES CSD_SOURCES(SOURCE_ID)
);

-- TABLE 3: CSD_AGENTS
CREATE TABLE IF NOT EXISTS CSD_AGENTS (
    AGENT_ID               INT             NOT NULL        PRIMARY KEY AUTO_INCREMENT,
    FIRST_NAME             VARCHAR(255)    NOT NULL,
    MIDDLE_NAME            VARCHAR(255),
    LAST_NAME              VARCHAR(255)    NOT NULL,
    PSEUDO_CODE            VARCHAR(255)    NOT NULL        UNIQUE,
    SOURCE_ID              INT             NOT NULL,
    ACTIVE_FLAG            TINYINT(1)      NOT NULL,
    START_DATE             DATETIME        NOT NULL,
    END_DATE               DATETIME        NOT NULL,
    FOREIGN KEY            (SOURCE_ID) REFERENCES CSD_SOURCES(SOURCE_ID)
);

-- TABLE 4: CSD_CUSTOMER_TYPES
CREATE TABLE IF NOT EXISTS CSD_CUSTOMER_TYPES (
    CUSTOMER_TYPE_ID       INT             NOT NULL        PRIMARY KEY AUTO_INCREMENT,
    CUSTOMER_TYPE_NAME     VARCHAR(255)    NOT NULL,
    SOURCE_ID              INT             NOT NULL,
    DESCRIPTION            TEXT,
    ACTIVE_FLAG            TINYINT(1)      NOT NULL,
    START_DATE             DATETIME        NOT NULL,
    END_DATE               DATETIME        NOT NULL,
    FOREIGN KEY            (SOURCE_ID) REFERENCES CSD_SOURCES(SOURCE_ID)
);

-- TABLE 5: CSD_TABLE_TYPES
CREATE TABLE IF NOT EXISTS CSD_TABLE_TYPES (
    TABLE_TYPE_ID          INT             NOT NULL        PRIMARY KEY AUTO_INCREMENT,
    TABLE_TYPE_NAME        VARCHAR(255)    NOT NULL        UNIQUE,
    DESCRIPTION            TEXT,
    ACTIVE_FLAG            TINYINT(1)      NOT NULL,
    START_DATE             DATETIME        NOT NULL,
    END_DATE               DATETIME        NOT NULL
);

-- TABLE 6: CSD_TABLE_LOAD_TYPES
CREATE TABLE IF NOT EXISTS CSD_TABLE_LOAD_TYPES (
    TABLE_LOAD_TYPE_ID     INT             NOT NULL        PRIMARY KEY AUTO_INCREMENT,
    TABLE_LOAD_TYPE_NAME   VARCHAR(255)    NOT NULL        UNIQUE,
    DESCRIPTION            TEXT,
    ACTIVE_FLAG            TINYINT(1)      NOT NULL,
    START_DATE             DATETIME        NOT NULL,
    END_DATE               DATETIME        NOT NULL
);

-- TABLE 7: CSD_DATA_DICTIONARY
CREATE TABLE IF NOT EXISTS CSD_DATA_DICTIONARY (
    DATA_DICTIONARY_ID     INT             NOT NULL        PRIMARY KEY AUTO_INCREMENT,
    SOURCE_ID              INT             NOT NULL,
    FIELD_NAME             VARCHAR(255)    NOT NULL,
    DATA_TYPE              VARCHAR(255)    NOT NULL,
    VALUES_ALLOWED         TEXT            NOT NULL,
    DESCRIPTION            TEXT,
    EXAMPLE                TEXT,
    ACTIVE_FLAG            TINYINT(1)      NOT NULL,
    START_DATE             DATETIME        NOT NULL,
    END_DATE               DATETIME        NOT NULL,
    FOREIGN KEY            (SOURCE_ID) REFERENCES CSD_SOURCES(SOURCE_ID)
);

-- TABLE 8: CSD_DATA_LOADS
CREATE TABLE IF NOT EXISTS CSD_DATA_LOADS (
    DATA_LOAD_ID           INT             NOT NULL        PRIMARY KEY AUTO_INCREMENT,
    DAG_ID                 VARCHAR(255),
    LOAD_STATUS            VARCHAR(255)    NOT NULL,
    LOAD_START_DATE        DATETIME        NOT NULL,
    LOAD_END_DATE          DATETIME,
    BATCH_COUNT            INT,
    INSERT_COUNT           INT,
    UPDATE_COUNT           INT,
    DUPLICATE_COUNT        INT,
    UPSERT_COUNT           INT,
    VALID_COUNT            INT,
    INVALID_COUNT          INT,
    DATA_VALID_PERCENTAGE  INT,
    LOAD_DURATION          VARCHAR(255),
    UNIQUE                 (DAG_ID)
);

-- TABLE 9: CSD_TABLE_NAMES
CREATE TABLE IF NOT EXISTS CSD_TABLE_NAMES (
    TABLE_ID               INT             NOT NULL        PRIMARY KEY AUTO_INCREMENT,
    TABLE_NAME             VARCHAR(255)    NOT NULL        UNIQUE,
    TABLE_TYPE_ID          INT             NOT NULL,
    DESCRIPTION            TEXT,
    TABLE_LOAD_TYPE_ID     INT             NOT NULL,
    ACTIVE_FLAG            TINYINT(1)      NOT NULL,
    START_DATE             DATETIME        NOT NULL,
    END_DATE               DATETIME        NOT NULL,
    FOREIGN KEY            (TABLE_TYPE_ID) REFERENCES CSD_TABLE_TYPES(TABLE_TYPE_ID),
    FOREIGN KEY            (TABLE_LOAD_TYPE_ID) REFERENCES CSD_TABLE_LOAD_TYPES(TABLE_LOAD_TYPE_ID)
);

-- TABLE 10: CSD_TABLE_COLUMNS
CREATE TABLE IF NOT EXISTS CSD_TABLE_COLUMNS (
    TABLE_COLUMN_ID        INT             NOT NULL        PRIMARY KEY AUTO_INCREMENT,
    TABLE_ID               INT             NOT NULL,
    COLUMN_NAME            VARCHAR(255)    NOT NULL,
    DATA_TYPE              VARCHAR(255)    NOT NULL,
    FIELD_LENGTH           INT,
    DESCRIPTION            TEXT,
    ACTIVE_FLAG            TINYINT(1)      NOT NULL,
    START_DATE             DATETIME        NOT NULL,
    END_DATE               DATETIME        NOT NULL,
    FOREIGN KEY            (TABLE_ID) REFERENCES CSD_TABLE_NAMES(TABLE_ID)
);

-- TABLE 11: CSD_DATA_MART
CREATE TABLE IF NOT EXISTS CSD_DATA_MART (
    CSD_ID                 INT             NOT NULL        PRIMARY KEY AUTO_INCREMENT,
    SOURCE_ID              INT             NOT NULL,
    SOURCE_SYSTEM_IDENTIFIER VARCHAR(255)  NOT NULL,
    AGENT_ID               INT,
    INTERACTION_DATE       DATETIME,
    SUPPORT_AREA_ID        INT,
    INTERACTION_STATUS     VARCHAR(255),
    INTERACTION_TYPE       VARCHAR(255),
    CUSTOMER_TYPE_ID       INT,
    HANDLE_TIME            INT,
    WORK_TIME              INT,
    FIRST_CONTACT_RESOLUTION TINYINT(1),
    QUERY_STATUS           VARCHAR(255),
    SOLUTION_TYPE          VARCHAR(255),
    CUSTOMER_RATING        INT,
    SOURCE_HASH_KEY        VARCHAR(255)    NOT NULL,
    DATA_LOAD_ID           INT             NOT NULL,
    IS_VALID_DATA          TINYINT(1)      NOT NULL,
    ACTIVE_FLAG            TINYINT(1)      NOT NULL,
    START_DATE             DATETIME        NOT NULL,
    END_DATE               DATETIME        NOT NULL,
    FOREIGN KEY            (SOURCE_ID) REFERENCES CSD_SOURCES(SOURCE_ID),
    FOREIGN KEY            (AGENT_ID) REFERENCES CSD_AGENTS(AGENT_ID),
    FOREIGN KEY            (SUPPORT_AREA_ID) REFERENCES CSD_SUPPORT_AREAS(SUPPORT_AREA_ID),
    FOREIGN KEY            (CUSTOMER_TYPE_ID) REFERENCES CSD_CUSTOMER_TYPES(CUSTOMER_TYPE_ID),
    FOREIGN KEY            (DATA_LOAD_ID) REFERENCES CSD_DATA_LOADS(DATA_LOAD_ID)
);

-- TABLE 12: STREAMING_DATA_ARCHIVES
CREATE TABLE IF NOT EXISTS STREAMING_DATA_ARCHIVES (
    ARCHIVE_ID             INT             NOT NULL        PRIMARY KEY AUTO_INCREMENT,
    STREAM_RECORD_ID       INT             NOT NULL,
    STREAMING_DATA         TEXT            NOT NULL
);